(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{275:function(t,s,a){"use strict";a.r(s);var n=a(28),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"显式锁和aqs（一）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显式锁和aqs（一）"}},[t._v("#")]),t._v(" 显式锁和AQS（一）")]),t._v(" "),a("h2",{attrs:{id:"显式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显式锁"}},[t._v("#")]),t._v(" 显式锁")]),t._v(" "),a("blockquote",[a("p",[t._v("显式锁使用的范式")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ****")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("img",{attrs:{src:"/images/java/thread/微信图片_20200920170353.png"}}),t._v(" "),a("blockquote",[a("p",[t._v("synchronized 在性能消耗上比 Lock 好，synchronized 是语法， Lock是类")]),t._v(" "),a("p",[t._v("可重入锁，比如递归调用的线程可以持同一把锁，不至于自己锁死自己")]),t._v(" "),a("p",[t._v("公平锁和非公平锁，非公平锁的性能消耗较小，因为在线程唤醒上下文切换时，新来的线程可以不用排在活跃线程的最后去等待，可以去直接竞争锁")]),t._v(" "),a("p",[t._v("读锁和写锁是互斥的，读锁和读锁之间可并行的")])])])}),[],!1,null,null,null);s.default=e.exports}}]);